{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","border","borderRadius","boxShadow","color","margin","fontSize","App","classes","useState","result","setResult","handleClick","e","concat","target","name","console","log","clear","backSpace","slice","length","calculate","a","eval","toString","style","width","textShadow","value","sx","mx","mt","variant","className","onClick","fontWeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"i+CAIMA,UAAYC,mDAAW,CAC3BC,KAAM,CACJC,OAAQ,EACRC,aAAc,EACdC,UAAW,wCACXC,MAAO,QACPC,OAAQ,iBACRC,SAAU,qBAIC,SAASC,MACtB,IAAMC,QAAUV,YAChB,UAA4BW,oDAAS,IAArC,4IAAOC,OAAP,cAAeC,UAAf,cACMC,YAAc,SAACC,GACnBF,UAAUD,OAAOI,OAAOD,EAAEE,OAAOC,OACjCC,QAAQC,IAAIL,EAAEE,OAAOC,OAEjBG,MAAQ,WACZR,UAAU,KAENS,UAAY,WAChBT,UAAUD,OAAOW,MAAM,EAAGX,OAAOY,OAAS,KAGtCC,UAAS,uPAAG,8HAAAC,EAAA,2HAERb,UAAUc,KAAKf,QAAQgB,YAFf,kFAIdf,UAAU,iBAJI,qEAAH,wDAQf,OACE,+HACE,iEACEgB,MAAO,CACLC,MAAO,QACPvB,OAAQ,OACRD,MAAO,OACPyB,WAAY,oBALhB,uBAUA,4DAAC,6CAAD,CAAOF,MAAO,CAAEC,MAAO,QAASvB,OAAQ,QAAxC,UACE,2DAAC,6CAAD,CACEyB,MAAOpB,OACPqB,GAAI,CAAEC,GAAI,OAAQJ,MAAO,QAASK,GAAI,SAExC,4DAAC,6CAAD,WACE,2DAAC,6CAAD,CACEC,QAAQ,YACRC,UAAW3B,QAAQR,KACnBoC,QAASjB,MACTY,GAAI,CACFH,MAAO,QACPS,WAAY,OANhB,mBAWA,2DAAC,6CAAD,CACEH,QAAQ,YACRC,UAAW3B,QAAQR,KACnB+B,GAAI,CAAEM,WAAY,OAClBD,QAAShB,UAJX,eAQA,2DAAC,6CAAD,CACEJ,KAAK,IACLoB,QAASb,UACTW,QAAQ,YACRC,UAAW3B,QAAQR,KACnB+B,GAAI,CAAEM,WAAY,OALpB,kBAUF,4DAAC,6CAAD,WACE,2DAAC,6CAAD,CAAQrB,KAAK,IAAImB,UAAW3B,QAAQR,KAAMoC,QAASxB,YAAnD,eAGA,2DAAC,6CAAD,CAAQI,KAAK,IAAImB,UAAW3B,QAAQR,KAAMoC,QAASxB,YAAnD,eAGA,2DAAC,6CAAD,CAAQI,KAAK,IAAImB,UAAW3B,QAAQR,KAAMoC,QAASxB,YAAnD,eAGA,2DAAC,6CAAD,CACEsB,QAAQ,YACRC,UAAW3B,QAAQR,KACnBoC,QAASxB,YACTI,KAAK,IACLe,GAAI,CAAEM,WAAY,OALpB,qBAUF,4DAAC,6CAAD,WACE,2DAAC,6CAAD,CAAQrB,KAAK,IAAImB,UAAW3B,QAAQR,KAAMoC,QAASxB,YAAnD,eAGA,2DAAC,6CAAD,CAAQI,KAAK,IAAImB,UAAW3B,QAAQR,KAAMoC,QAASxB,YAAnD,eAGA,2DAAC,6CAAD,CAAQI,KAAK,IAAImB,UAAW3B,QAAQR,KAAMoC,QAASxB,YAAnD,eAGA,2DAAC,6CAAD,CACEsB,QAAQ,YACRC,UAAW3B,QAAQR,KACnBoC,QAASxB,YACTmB,GAAI,CAAEM,WAAY,OAClBrB,KAAK,IALP,qBAUF,4DAAC,6CAAD,WACE,2DAAC,6CAAD,CAAQA,KAAK,IAAImB,UAAW3B,QAAQR,KAAMoC,QAASxB,YAAnD,eAGA,2DAAC,6CAAD,CAAQI,KAAK,IAAImB,UAAW3B,QAAQR,KAAMoC,QAASxB,YAAnD,eAGA,2DAAC,6CAAD,CAAQI,KAAK,IAAImB,UAAW3B,QAAQR,KAAMoC,QAASxB,YAAnD,eAGA,2DAAC,6CAAD,CACEsB,QAAQ,YACRC,UAAW3B,QAAQR,KACnBoC,QAASxB,YACTI,KAAK,IACLe,GAAI,CAAEM,WAAY,OALpB,kBAUF,4DAAC,6CAAD,WACE,2DAAC,6CAAD,CAAQrB,KAAK,IAAImB,UAAW3B,QAAQR,KAAMoC,QAASxB,YAAnD,eAGA,2DAAC,6CAAD,CAAQI,KAAK,IAAImB,UAAW3B,QAAQR,KAAMoC,QAASxB,YAAnD,eAGA,2DAAC,6CAAD,CACEI,KAAK,IACLe,GAAI,CAAEM,WAAY,OAClBF,UAAW3B,QAAQR,KACnBoC,QAASxB,YACTsB,QAAQ,YALV,eASA,2DAAC,6CAAD,CACEA,QAAQ,YACRC,UAAW3B,QAAQR,KACnBoC,QAASxB,YACTI,KAAK,IAJP,0B,iHCpJKsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC1C,EAAA,EAAD,MAEF2C,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d2a522c6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Button, Paper, Box, OutlinedInput } from \"@mui/material\";\n\nconst useStyles = makeStyles({\n  root: {\n    border: 0,\n    borderRadius: 3,\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n    color: \"white\",\n    margin: \"6px !important\",\n    fontSize: \"20px !important\",\n  },\n});\n\nexport default function App() {\n  const classes = useStyles();\n  const [result, setResult] = useState(\"\");\n  const handleClick = (e) => {\n    setResult(result.concat(e.target.name));\n    console.log(e.target.name);\n  };\n  const clear = () => {\n    setResult(\"\");\n  };\n  const backSpace = () => {\n    setResult(result.slice(0, result.length - 1));\n  };\n\n  const calculate = async () => {\n    try {\n      await setResult(eval(result).toString());\n    } catch {\n      setResult(\"invalid input\");\n    }\n  };\n\n  return (\n    <>\n      <h1\n        style={{\n          width: \"180px\",\n          margin: \"auto\",\n          color: \"blue\",\n          textShadow: \"2px 2px 1px gray\",\n        }}\n      >\n        Calce App\n      </h1>\n      <Paper style={{ width: \"306px\", margin: \"auto\" }}>\n        <OutlinedInput\n          value={result}\n          sx={{ mx: \"10px\", width: \"286px\", mt: \"4px\" }}\n        />\n        <Box>\n          <Button\n            variant=\"contained\"\n            className={classes.root}\n            onClick={clear}\n            sx={{\n              width: \"140px\",\n              fontWeight: \"600\",\n            }}\n          >\n            clear\n          </Button>\n          <Button\n            variant=\"contained\"\n            className={classes.root}\n            sx={{ fontWeight: \"600\" }}\n            onClick={backSpace}\n          >\n            c\n          </Button>\n          <Button\n            name=\"=\"\n            onClick={calculate}\n            variant=\"contained\"\n            className={classes.root}\n            sx={{ fontWeight: \"600\" }}\n          >\n            =\n          </Button>\n        </Box>\n        <Box>\n          <Button name=\"1\" className={classes.root} onClick={handleClick}>\n            1\n          </Button>\n          <Button name=\"2\" className={classes.root} onClick={handleClick}>\n            2\n          </Button>\n          <Button name=\"3\" className={classes.root} onClick={handleClick}>\n            3\n          </Button>\n          <Button\n            variant=\"contained\"\n            className={classes.root}\n            onClick={handleClick}\n            name=\"/\"\n            sx={{ fontWeight: \"600\" }}\n          >\n            &divide;\n          </Button>\n        </Box>\n        <Box>\n          <Button name=\"4\" className={classes.root} onClick={handleClick}>\n            4\n          </Button>\n          <Button name=\"5\" className={classes.root} onClick={handleClick}>\n            5\n          </Button>\n          <Button name=\"6\" className={classes.root} onClick={handleClick}>\n            6\n          </Button>\n          <Button\n            variant=\"contained\"\n            className={classes.root}\n            onClick={handleClick}\n            sx={{ fontWeight: \"600\" }}\n            name=\"*\"\n          >\n            &times;\n          </Button>\n        </Box>\n        <Box>\n          <Button name=\"7\" className={classes.root} onClick={handleClick}>\n            7\n          </Button>\n          <Button name=\"8\" className={classes.root} onClick={handleClick}>\n            8\n          </Button>\n          <Button name=\"9\" className={classes.root} onClick={handleClick}>\n            9\n          </Button>\n          <Button\n            variant=\"contained\"\n            className={classes.root}\n            onClick={handleClick}\n            name=\"+\"\n            sx={{ fontWeight: \"600\" }}\n          >\n            +\n          </Button>\n        </Box>\n        <Box>\n          <Button name=\"0\" className={classes.root} onClick={handleClick}>\n            0\n          </Button>\n          <Button name=\".\" className={classes.root} onClick={handleClick}>\n            .\n          </Button>\n          <Button\n            name=\"%\"\n            sx={{ fontWeight: \"600\" }}\n            className={classes.root}\n            onClick={handleClick}\n            variant=\"contained\"\n          >\n            %\n          </Button>\n          <Button\n            variant=\"contained\"\n            className={classes.root}\n            onClick={handleClick}\n            name=\"-\"\n          >\n            -\n          </Button>\n        </Box>\n      </Paper>\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}